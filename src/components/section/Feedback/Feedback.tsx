"use client"

import Badge from "@/components/ui/Badge/Badge";
import styles from "./styles.module.css";
import GlobalApi from "@/utils/GlobalApi";
import React, { useEffect, useState } from "react"

const Feedback = () => {

  const [ name,  setName ] = useState('');
  const [ tel,  setTel ] = useState('');
  const [ comment,  setComment ] = useState('');
  const [ formField, setFormField ] = useState(false);

  useEffect(() => {
    if ( name && tel ) {
        setFormField(true);
    } else {
        setFormField(false);
    }
}, [ name, tel ]);

  const saveFields = () => {
    const data = {
      data: {
        name: name,
        tel: tel,
        comment: comment,
      }
    }
    GlobalApi.createOrder(data).then((resp: Response) => {
      console.log(resp);
      if ( resp ) {
        alert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞')
      }
    })
  }

  return (
    <section className={styles.feedback}>
      <div className={styles.feedbackContainer}>
        <Badge>üìû –ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å–µ–≥–æ–¥–Ω—è</Badge>
        <h3 className={styles.feedbackTitle}>–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?</h3>
        <div className={styles.feedbackContent}>
          <span className={styles.feedbackWarning}>
            *–ú—ã –Ω–∏–∫–æ–º—É –Ω–µ –ø–µ—Ä–µ–¥–∞–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ. 
            <br />–ò –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞—à –Ω–æ–º–µ—Ä –≤ –±–∞–∑—É.
          </span>
          <input className={styles.feedbackInput} type="text" onChange={(e) => setName(e.target.value)} placeholder="–í–∞—à–µ –∏–º—è"/>
          <input className={styles.feedbackInput} type="tel" onChange={(e) => setTel(e.target.value)} placeholder="–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω"/>
          <textarea className={styles.feedbackInputArea} rows="2" type="text" onChange={(e) => setComment(e.target.value)} placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"/>
          <button disabled={!formField} className={styles.feedbackButton} onClick={() => saveFields()} >–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        </div>
      </div>
    </section>
  )
}

export default Feedback;